name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: DataToSheets-Linux
            exe_name: DataToSheets-Linux
            icon: ""
          - os: windows-latest
            artifact_name: DataToSheets-Windows.exe
            exe_name: DataToSheets-Windows
            icon: "--icon=src/assets/icons/bot_icon.ico"
          - os: macos-latest
            artifact_name: DataToSheets-macOS
            exe_name: DataToSheets-macOS
            icon: "--icon=src/assets/icons/bot_icon.icns"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk python3-dev
          sudo apt-get clean

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt pyinstaller

      - name: Create hooks directory
        run: mkdir -p hooks

      - name: Add PIL hook
        run: |
          echo 'from PyInstaller.utils.hooks import collect_submodules
          hiddenimports = collect_submodules("PIL")' > hooks/hook-pil.py

      - name: Build executable (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          pyinstaller \
            --onefile \
            --name ${{ matrix.exe_name }} \
            ${{ matrix.icon }} \
            --add-data="src/assets/icons/*:assets/icons" \
            --additional-hooks-dir=hooks \
            --hidden-import='PIL._tkinter_finder' \
            --hidden-import='PIL.Image' \
            --hidden-import='PIL.ImageTk' \
            $( [ "${{ matrix.os }}" == "macos-latest" ] && echo "--osx-bundle-identifier com.yourdomain.DataToSheets" ) \
            src/bot.py

      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          pyinstaller ^
            --onefile ^
            --name ${{ matrix.exe_name }} ^
            ${{ matrix.icon }} ^
            --add-data="src/assets/icons/*;assets/icons" ^
            --additional-hooks-dir=hooks ^
            --hidden-import="PIL._tkinter_finder" ^
            --hidden-import="PIL.Image" ^
            --hidden-import="PIL.ImageTk" ^
            --noconsole ^
            src/bot.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/${{ matrix.exe_name }}*

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files (debug)
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
          body: |
            Auto-generated release for version ${{ github.ref_name }}
          files: |
            artifacts/DataToSheets-Windows.exe/DataToSheets-Windows.exe
            artifacts/DataToSheets-Linux/DataToSheets-Linux
            artifacts/DataToSheets-macOS/DataToSheets-macOS
